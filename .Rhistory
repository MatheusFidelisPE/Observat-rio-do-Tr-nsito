valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado (2011-2019)", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado (2011-2019)", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado (2011-2019)", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
valores[1,]
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
data.plot <- data.frame(ocup=ocupacao, "on"=valores[,1], doz=valores[,2],treze=valores[,3],quatr=valores[,4],quinze=valores[,5],dsei=valores[,6],dset=valores[,7],doit=valores[,8],dnov=valores[,9])
fig <- plot_ly(data.plot, x = ~ocup, y = ~on, type = 'bar', name = 'SF Zoo')
#fig <- fig %>% add_trace(y = ~LA_Zoo, name = 'LA Zoo')
#fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'group')
fig
library(dplyr)
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, fig.width = 50, fig.height = 25)
states <- read_state(
year=2019,
showProgress = FALSE
)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
comparando.regioes
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n())
comparando.regioes
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD")
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD")
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado (2011-2019)", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, fig.width = 50, fig.height = 25)
states <- read_state(
year=2019,
showProgress = FALSE
)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
estados <- read.csv("estados.csv")
regioes <- read.csv("regioes.csv")
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD" )
comparando.regioes
View(regioes)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(NOME,ano_de_controle,quantidade)
comparando.regioes
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(NOME,ano_de_controle,quantidade) %>% arrange(ano_de_controle)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(NOME,ano_de_controle,quantidade) %>% arrange(ano_de_controle)
comparando.regioes
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
comparando.regioes
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
DT::datatable(data=ocup.ano,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
DT::datatable(data=comparando.regioes,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
ocup.mais.mortes <- dados.limpos %>% filter(!is.na(ocupacao_falecido)) %>% group_by(ocupacao_falecido) %>% summarise(contagem = n()) %>% arrange(desc(contagem))
quatro.ocup.mais.mortes <- ocup.mais.mortes$ocupacao_falecido[1:4]
dado.grafico.mulcol <- dados.limpos %>% filter(ocupacao_falecido %in% quatro.ocup.mais.mortes) %>% group_by(ano_de_controle, ocupacao_falecido) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle, ocupacao_falecido)
anos <- unique(dado.grafico.mulcol$ano_de_controle)
ocupacao <- dado.grafico.mulcol$ocupacao_falecido[1:4]
valores <- matrix(dado.grafico.mulcol$Mortes,nrow = 4, ncol = 9, byrow = T)
barplot(valores, main="Trabalhos Com Maior Quantidade de Mortes no Periodo Analisado (2011-2019)", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey"), legend = ocupacao, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
anos <- c(2011:2019)
ocupacao <- comparando.regioes$NOME[1:5]
valores <- matrix(comparando.regioes$quantidade,nrow = 5, ncol = 9, byrow = T)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey", "blue"), legend = ocupacao, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
DT::datatable(data=comparando.regioes,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
anos <- c(2011:2019)
anos
ocupacao <- comparando.regioes$NOME[1:5]
ocupacao
valores <- matrix(comparando.regioes$quantidade,nrow = 5, ncol = 9, byrow = T)
valores
ocupacao
anos <- c(2011:2019)
regioes <- comparando.regioes$NOME[1:5]
valores <- matrix(comparando.regioes$quantidade,nrow = 5, ncol = 9, byrow = T)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey", "blue"), legend = regioes, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
valores
comparando.regioes$quantidade
valores <- matrix(comparando.regioes$quantidade,nrow = 5, ncol = 9, byrow = F)
valores
anos <- c(2011:2019)
regioes <- comparando.regioes$NOME[1:5]
valores <- matrix(comparando.regioes$quantidade,nrow = 5, ncol = 9, byrow = F)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red", "yellow", "green", "grey","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "yellow", "green", "grey", "blue"), legend = regioes, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sexotot
dados.sexotot
View(dados.sexotot)
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
View(dados.sexotot)
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(data, labels = ~sexo, values = ~Mortes, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Mortes, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'Mortes Separadas por Sexo',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
View(dados.sexotot)
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Mortes, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'Mortes Separadas por Sexo',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Mortes, ' Óbitos'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'Mortes Separadas por Sexo',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot
View(dados.sexotot)
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
View(dados.sexotot)
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Mortes, ' Óbitos'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
fig <- fig %>% layout(title = 'Mortes Separadas por Sexo de 2011 até 2019',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sextot
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sextot
dados.sexotot
dados.sexotot <- dados.limpos %>% filter(!is.na(sexo)) %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sexotot
dados.sexotot <- dados.limpos %>% filter(is.na(sexo)) %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sexotot
dados.sexotot <- dados.limpos %>% filter(!is.na(sexo)) %>% group_by(sexo) %>% summarise(Mortes = n())
dados.sexotot
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
labels <- c("Feminino", "Masculino", "Indefinido")
pie(dados.sexotot, labels = labels, main="Morte por Sexo de 2011 até 2019", col=rainbow(3))
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
labels <- c("Feminino", "Masculino", "Indefinido")
pie(dados.sexotot$Mortes, labels = labels, main="Morte por Sexo de 2011 até 2019", col=rainbow(3))
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
labels <- c("Feminino", "Masculino", "Indefinido")
pie(dados.sexotot$Mortes, labels = labels, main="Morte por Sexo de 2011 até 2019", col=rainbow(3))
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie')
fig %>% layout(title = 'Mortes por Sexo de 2011 até 2019',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
dados.sexoAno <- dados.limpos %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
dados.sexoAno <- dados.limpos %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(comparando.regioes$quantidade,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
dados.sexoAno <- dados.limpos %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(dados.sexoAno$Mortes,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
dados.sexoAno <- dados.limpos %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(dados.sexoAno$Mortes,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
View(dados.sexoAno)
"as" != "as"
"as" != "a"
dados.sexoAno <- dados.limpos %>% filter(sexo != "Indefinido") group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
dados.sexoAno <- dados.limpos %>% filter(sexo != "Indefinido") %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
View(dados.sexoAno)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(dados.sexoAno$Mortes,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Regiões", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
dados.sexoAno <- dados.limpos %>% filter(sexo != "Indefinido") %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
View(dados.sexoAno)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(dados.sexoAno$Mortes,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Por Sexo E Ano", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
sexos
dados.sexoAno$sexo
View(dados.limpos)
dados.totEscolaridade <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido)) %>% group_by(escolaridade_anos_falecido) %>% summarise(Mortes = n())
dados.totEscolaridade <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido)) %>% group_by(escolaridade_anos_falecido) %>% summarise(Mortes = n())
fig <- plot_ly(x = dados.totEscolaridade$Mortes, y = dados.totEscolaridade$escolaridade_anos_falecido, type = 'bar', orientation = 'h')
fig
dados.anosNivel <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido), !is.na(nivel_escolaridade_falecido)) %>% group_by(escolaridade_anos_falecido, nivel_escolaridade_falecido) %>% summarise(Morte = n())
View(dados.anosNivel)
names(comparando.regioes)
names(comparando.regioes)[[1]] <- "Ano"
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
names(dados.anosNivel)
names(dados.anosNivel)[[1]] <- "Escolaridade Anos"
names(dados.anosNivel)[[1]]
names(dados.anosNivel)[[2]]
names(dados.anosNivel)[[2]] <- "Nível de Escolaridade"
names(dados.anosNivel)[[3]]
dados.anosNivel <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido), !is.na(nivel_escolaridade_falecido)) %>% group_by(escolaridade_anos_falecido, nivel_escolaridade_falecido) %>% summarise(Morte = n())
DT::datatable(data=dados.anosNivel,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
dados.anosNivel <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido), !is.na(nivel_escolaridade_falecido)) %>% group_by(escolaridade_anos_falecido, nivel_escolaridade_falecido) %>% summarise(Morte = n())
names(dados.anosNivel) <- c("Escolaridade Em Anos", "Nível de Escolaridade", "Morte")
DT::datatable(data=dados.anosNivel,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, fig.width = 50, fig.height = 25)
states <- read_state(
year=2019,
showProgress = FALSE
)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
estados <- read.csv("estados.csv")
regioes <- read.csv("regioes.csv")
dados.limpos <- read.csv("dado_limpo_2_0.csv")
dados.sexoAno <- dados.limpos %>% filter(sexo != "Indefinido") %>% group_by(sexo, ano_de_controle) %>% summarise(Mortes = n()) %>% arrange(ano_de_controle)
anos <- c(2011:2019)
sexos <- dados.sexoAno$sexo[1:2]
valores <- matrix(dados.sexoAno$Mortes,nrow = 2, ncol = 9, byrow = F)
barplot(valores, main="Comparando Por Sexo E Ano", names.arg=anos, xlab="Anos", ylab="Quantidade de Mortes", beside=T, col=c("red","blue"), cex.names = 4, cex.axis = 3, cex.lab = 3,cex.main=6)
legend("topright", pch = c(15,15,15), col=c("red", "blue"), legend = sexos, cex=5)
grid(nx = NULL, ny = NULL,
lty = 2,      # Grid line type
col = "gray", # Grid line color
lwd = 2)
dados.totEscolaridade <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido)) %>% group_by(escolaridade_anos_falecido) %>% summarise(Mortes = n())
fig <- plot_ly(x = dados.totEscolaridade$Mortes, y = dados.totEscolaridade$escolaridade_anos_falecido, type = 'bar', orientation = 'h')
fig
View(dados.limpos)
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, fig.width = 50, fig.height = 25)
states <- read_state(
year=2019,
showProgress = FALSE
)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
estados <- read.csv("estados.csv")
regioes <- read.csv("regioes.csv")
dados.limpos <- read.csv("dado_limpo_2_0.csv")
mortes.transito <- read.csv("mortes_em_transito.csv", sep = ",")
DT::datatable(head(mortes.transito,6), editable = "cell", options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
pacotes <- c("library(plotly)", "library(dplyr)", "library(DT)",
"library(geobr)", "library(ggplot2)")
utilizacao <- c("Utilizado para construção de gráficos",
"Utilizado para manipulação dos dados", "Utilizado para criação de tabelas interativas",
"Utilizado para construção de mapa de calor",
"para visualização de gráficos")
pacotes_descricao <- data.frame("Pacotes" = pacotes,
"Utilização" = utilizacao)
kable(pacotes_descricao, "html", booktabs = T) %>%
kable_styling(position = "center", bootstrap_options = c("responsive", "hover"), full_width = F)
library(plotly)
library(dplyr)
library(leaflet)
library(DT)
library(geobr)
library(ggplot2)
library(knitr)
knitr::opts_chunk$set(echo = TRUE, fig.width = 50, fig.height = 25)
states <- read_state(
year=2019,
showProgress = FALSE
)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
estados <- read.csv("estados.csv")
regioes <- read.csv("regioes.csv")
dados.limpos <- read.csv("dado_limpo_2_0.csv")
pacotes <- c("library(plotly)", "library(dplyr)", "library(DT)",
"library(geobr)", "library(ggplot2)")
utilizacao <- c("Utilizado para construção de gráficos",
"Utilizado para manipulação dos dados", "Utilizado para criação de tabelas interativas",
"Utilizado para construção de mapa de calor",
"para visualização de gráficos")
pacotes_descricao <- data.frame("Pacotes" = pacotes,
"Utilização" = utilizacao)
kable(pacotes_descricao, "html", booktabs = T) %>%
kable_styling(position = "center", bootstrap_options = c("responsive", "hover"), full_width = F)
pacotes <- c("library(plotly)", "library(dplyr)", "library(DT)",
"library(geobr)", "library(ggplot2)")
utilizacao <- c("Utilizado para construção de gráficos",
"Utilizado para manipulação dos dados", "Utilizado para criação de tabelas interativas",
"Utilizado para construção de mapa de calor",
"para visualização de gráficos")
pacotes_descricao <- data.frame("Pacotes" = pacotes,
"Utilização" = utilizacao)
DT::datatable(pacotes_descricao, editable = "cell", options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
pacotes <- c("library(plotly)", "library(dplyr)", "library(DT)",
"library(geobr)", "library(ggplot2)", "library(knitr)")
utilizacao <- c("Utilizado para construção de gráficos",
"Utilizado para manipulação dos dados", "Utilizado para criação de tabelas interativas",
"Utilizado para construção de mapa de calor",
"para visualização de gráficos", "Utilizado para alteração de chuncks")
pacotes_descricao <- data.frame("Pacotes" = pacotes,
"Utilização" = utilizacao)
DT::datatable(pacotes_descricao, editable = "cell", options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
comparando.regioes <- dados.limpos %>% group_by(cod_regiao, ano_de_controle) %>% summarise(quantidade = n()) %>% arrange(ano_de_controle)
comparando.regioes <- merge(comparando.regioes,regioes, by.x="cod_regiao", by.y = "COD") %>% select(ano_de_controle,NOME,quantidade) %>% arrange(ano_de_controle)
DT::datatable(data=comparando.regioes,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
dados.sexotot <- dados.limpos %>% group_by(sexo) %>% summarise(Mortes = n())
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)')
fig <- plot_ly(dados.sexotot, labels = ~sexo, values = ~Mortes, type = 'pie')
fig %>% layout(title = 'Mortes por Sexo de 2011 até 2019',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
dados.totEscolaridade <- dados.limpos %>% filter(!is.na(escolaridade_anos_falecido)) %>% group_by(escolaridade_anos_falecido) %>% summarise(Mortes = n())
fig <- plot_ly(x = dados.totEscolaridade$Mortes, y = dados.totEscolaridade$escolaridade_anos_falecido, type = 'bar', orientation = 'h')
fig
dados.limpos$ocupacao_falecido <- as.factor(dados.limpos$ocupacao_falecido)
ocup.ano <- dados.limpos %>% filter(!is.na(dados.limpos$ocupacao_falecido)) %>% group_by(ocupacao_falecido,ano_de_controle) %>% summarise("Mortes" = n()) %>% filter(Mortes > 200) %>% arrange(desc(Mortes))
DT::datatable(data=ocup.ano,
editable = "cell",
options = list(c(scrollY="200px", scrollX="300px", pageLength = 100)))
